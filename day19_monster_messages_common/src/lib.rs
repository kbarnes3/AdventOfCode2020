pub enum RuleDescription {
    Literal(char),
    Sequence(&'static [u64]),
    Or(&'static [u64], &'static [u64])
}

use RuleDescription::*;

pub struct Rule {
    pub id: u64,
    pub description: RuleDescription
}

pub const TARGET_RULE: u64 = 0;

pub const REPLACEMENT_RULES: [Rule; 2] = [
    Rule { id: 8, description: Or(&[ 42, ], &[ 42, 8, ]) },
    Rule { id: 11, description: Or(&[ 42, 31, ], &[ 42, 11, 31, ]) },
];

// Substitute with:
// '<,'>s/\(\d\+\): "\(\w\)"/    Rule { id: \1, description: Literal('\2') } ,/e | '<,'>s/\(\d\)$/\1,/ | '<,'>s/\(\d\) /\1, /g | '<,'>s/\(\d\+\): \(.*\) | \(.*\)/    Rule { id: \1, description: Or(\&[ \2 ], \&[ \3 ]) },/ | '<,'>s/\(\d\+\): \(.*\)/e    Rule { id: \1, description: Sequence(\&[ \2 ]) },/e
pub const SAMPLE_RULES: [Rule; 6] = [
    Rule { id: 0, description: Sequence(&[ 4, 1, 5, ]) },
    Rule { id: 1, description: Or(&[ 2, 3, ], &[ 3, 2, ]) },
    Rule { id: 2, description: Or(&[ 4, 4, ], &[ 5, 5, ]) },
    Rule { id: 3, description: Or(&[ 4, 5, ], &[ 5, 4, ]) },
    Rule { id: 4, description: Literal('a') } ,
    Rule { id: 5, description: Literal('b') } ,
];

// Substitute with:
// '<,'>s/\(.*\)/    "\1",/
pub const SAMPLE_MESSAGES: [&str; 5] = [
    "ababbb",
    "bababa",
    "abbbab",
    "aaabbb",
    "aaaabbb",
];

pub const SAMPLE_RULES_2: [Rule; 31] = [
    Rule { id: 42, description: Or(&[ 9, 14, ], &[ 10, 1, ]) },
    Rule { id: 9, description: Or(&[ 14, 27, ], &[ 1, 26, ]) },
    Rule { id: 10, description: Or(&[ 23, 14, ], &[ 28, 1, ]) },
    Rule { id: 1, description: Literal('a') } ,
    Rule { id: 11, description: Sequence(&[ 42, 31, ]) },
    Rule { id: 5, description: Or(&[ 1, 14, ], &[ 15, 1, ]) },
    Rule { id: 19, description: Or(&[ 14, 1, ], &[ 14, 14, ]) },
    Rule { id: 12, description: Or(&[ 24, 14, ], &[ 19, 1, ]) },
    Rule { id: 16, description: Or(&[ 15, 1, ], &[ 14, 14, ]) },
    Rule { id: 31, description: Or(&[ 14, 17, ], &[ 1, 13, ]) },
    Rule { id: 6, description: Or(&[ 14, 14, ], &[ 1, 14, ]) },
    Rule { id: 2, description: Or(&[ 1, 24, ], &[ 14, 4, ]) },
    Rule { id: 0, description: Sequence(&[ 8, 11, ]) },
    Rule { id: 13, description: Or(&[ 14, 3, ], &[ 1, 12, ]) },
    Rule { id: 15, description: Or(&[ 1, ], &[ 14, ]) },
    Rule { id: 17, description: Or(&[ 14, 2, ], &[ 1, 7, ]) },
    Rule { id: 23, description: Or(&[ 25, 1, ], &[ 22, 14, ]) },
    Rule { id: 28, description: Sequence(&[ 16, 1, ]) },
    Rule { id: 4, description: Sequence(&[ 1, 1, ]) },
    Rule { id: 20, description: Or(&[ 14, 14, ], &[ 1, 15, ]) },
    Rule { id: 3, description: Or(&[ 5, 14, ], &[ 16, 1, ]) },
    Rule { id: 27, description: Or(&[ 1, 6, ], &[ 14, 18, ]) },
    Rule { id: 14, description: Literal('b') } ,
    Rule { id: 21, description: Or(&[ 14, 1, ], &[ 1, 14, ]) },
    Rule { id: 25, description: Or(&[ 1, 1, ], &[ 1, 14, ]) },
    Rule { id: 22, description: Sequence(&[ 14, 14, ]) },
    Rule { id: 8, description: Sequence(&[ 42, ]) },
    Rule { id: 26, description: Or(&[ 14, 22, ], &[ 1, 20, ]) },
    Rule { id: 18, description: Sequence(&[ 15, 15, ]) },
    Rule { id: 7, description: Or(&[ 14, 5, ], &[ 1, 21, ]) },
    Rule { id: 24, description: Sequence(&[ 14, 1, ]) },
];

pub const SAMPLE_MESSAGES_2: [&str; 15] = [
    "abbbbbabbbaaaababbaabbbbabababbbabbbbbbabaaaa",
    "bbabbbbaabaabba",
    "babbbbaabbbbbabbbbbbaabaaabaaa",
    "aaabbbbbbaaaabaababaabababbabaaabbababababaaa",
    "bbbbbbbaaaabbbbaaabbabaaa",
    "bbbababbbbaaaaaaaabbababaaababaabab",
    "ababaaaaaabaaab",
    "ababaaaaabbbaba",
    "baabbaaaabbaaaababbaababb",
    "abbbbabbbbaaaababbbbbbaaaababb",
    "aaaaabbaabaaaaababaa",
    "aaaabbaaaabbaaa",
    "aaaabbaabbaaaaaaabbbabbbaaabbaabaaa",
    "babaaabbbaaabaababbaabababaaab",
    "aabbbbbaabbbaaaaaabbbbbababaaaaabbaaabba",
];

pub const REAL_RULES: [Rule; 136] = [
    Rule { id: 44, description: Or(&[ 82, 117, ], &[ 26, 54, ]) },
    Rule { id: 4, description: Or(&[ 94, 117, ], &[ 94, 54, ]) },
    Rule { id: 86, description: Sequence(&[ 54, 54, ]) },
    Rule { id: 110, description: Or(&[ 117, 66, ], &[ 54, 17, ]) },
    Rule { id: 7, description: Or(&[ 4, 54, ], &[ 22, 117, ]) },
    Rule { id: 16, description: Or(&[ 117, 27, ], &[ 54, 15, ]) },
    Rule { id: 36, description: Or(&[ 117, 38, ], &[ 54, 110, ]) },
    Rule { id: 40, description: Or(&[ 117, 117, ], &[ 54, 56, ]) },
    Rule { id: 37, description: Sequence(&[ 97, 117, ]) },
    Rule { id: 84, description: Or(&[ 120, 54, ], &[ 55, 117, ]) },
    Rule { id: 96, description: Or(&[ 17, 54, ], &[ 66, 117, ]) },
    Rule { id: 129, description: Or(&[ 16, 54, ], &[ 116, 117, ]) },
    Rule { id: 10, description: Or(&[ 108, 54, ], &[ 41, 117, ]) },
    Rule { id: 63, description: Or(&[ 54, 97, ], &[ 117, 40, ]) },
    Rule { id: 23, description: Or(&[ 86, 54, ], &[ 130, 117, ]) },
    Rule { id: 45, description: Or(&[ 54, 130, ], &[ 117, 53, ]) },
    Rule { id: 32, description: Or(&[ 54, 37, ], &[ 117, 114, ]) },
    Rule { id: 62, description: Or(&[ 119, 54, ], &[ 60, 117, ]) },
    Rule { id: 71, description: Or(&[ 107, 54, ], &[ 134, 117, ]) },
    Rule { id: 76, description: Or(&[ 27, 117, ], &[ 70, 54, ]) },
    Rule { id: 42, description: Or(&[ 115, 54, ], &[ 25, 117, ]) },
    Rule { id: 99, description: Or(&[ 54, 91, ], &[ 117, 12, ]) },
    Rule { id: 15, description: Or(&[ 54, 94, ], &[ 117, 94, ]) },
    Rule { id: 64, description: Or(&[ 56, 54, ], &[ 117, 117, ]) },
    Rule { id: 114, description: Or(&[ 54, 17, ], &[ 117, 86, ]) },
    Rule { id: 75, description: Or(&[ 87, 117, ], &[ 51, 54, ]) },
    Rule { id: 0, description: Sequence(&[ 8, 11, ]) },
    Rule { id: 91, description: Or(&[ 117, 54, ], &[ 117, 117, ]) },
    Rule { id: 8, description: Sequence(&[ 42, ]) },
    Rule { id: 38, description: Sequence(&[ 40, 56, ]) },
    Rule { id: 1, description: Or(&[ 54, 73, ], &[ 117, 85, ]) },
    Rule { id: 132, description: Or(&[ 117, 104, ], &[ 54, 17, ]) },
    Rule { id: 134, description: Or(&[ 33, 54, ], &[ 127, 117, ]) },
    Rule { id: 28, description: Sequence(&[ 12, 54, ]) },
    Rule { id: 123, description: Or(&[ 66, 117, ], &[ 53, 54, ]) },
    Rule { id: 107, description: Or(&[ 117, 123, ], &[ 54, 111, ]) },
    Rule { id: 68, description: Or(&[ 22, 54, ], &[ 79, 117, ]) },
    Rule { id: 87, description: Or(&[ 58, 54, ], &[ 100, 117, ]) },
    Rule { id: 31, description: Or(&[ 54, 75, ], &[ 117, 1, ]) },
    Rule { id: 78, description: Or(&[ 117, 12, ], &[ 54, 118, ]) },
    Rule { id: 12, description: Or(&[ 54, 117, ], &[ 54, 54, ]) },
    Rule { id: 92, description: Or(&[ 54, 40, ], &[ 117, 64, ]) },
    Rule { id: 97, description: Sequence(&[ 54, 117, ]) },
    Rule { id: 34, description: Or(&[ 54, 12, ], &[ 117, 64, ]) },
    Rule { id: 20, description: Sequence(&[ 91, 56, ]) },
    Rule { id: 2, description: Or(&[ 54, 13, ], &[ 117, 99, ]) },
    Rule { id: 17, description: Or(&[ 117, 54, ], &[ 54, 54, ]) },
    Rule { id: 51, description: Or(&[ 117, 71, ], &[ 54, 3, ]) },
    Rule { id: 131, description: Or(&[ 104, 54, ], &[ 86, 117, ]) },
    Rule { id: 94, description: Sequence(&[ 117, 54, ]) },
    Rule { id: 5, description: Sequence(&[ 56, 56, ]) },
    Rule { id: 3, description: Or(&[ 89, 54, ], &[ 109, 117, ]) },
    Rule { id: 41, description: Or(&[ 103, 54, ], &[ 49, 117, ]) },
    Rule { id: 25, description: Or(&[ 117, 80, ], &[ 54, 121, ]) },
    Rule { id: 81, description: Or(&[ 122, 117, ], &[ 28, 54, ]) },
    Rule { id: 85, description: Or(&[ 54, 47, ], &[ 117, 65, ]) },
    Rule { id: 39, description: Or(&[ 97, 117, ], &[ 12, 54, ]) },
    Rule { id: 77, description: Or(&[ 97, 54, ], &[ 66, 117, ]) },
    Rule { id: 22, description: Or(&[ 64, 54, ], &[ 104, 117, ]) },
    Rule { id: 119, description: Or(&[ 97, 54, ], &[ 17, 117, ]) },
    Rule { id: 33, description: Or(&[ 86, 117, ], &[ 86, 54, ]) },
    Rule { id: 100, description: Or(&[ 61, 117, ], &[ 36, 54, ]) },
    Rule { id: 35, description: Or(&[ 50, 117, ], &[ 119, 54, ]) },
    Rule { id: 90, description: Or(&[ 54, 94, ], &[ 117, 86, ]) },
    Rule { id: 57, description: Or(&[ 54, 95, ], &[ 117, 96, ]) },
    Rule { id: 112, description: Or(&[ 12, 117, ], &[ 66, 54, ]) },
    Rule { id: 115, description: Or(&[ 54, 44, ], &[ 117, 52, ]) },
    Rule { id: 26, description: Or(&[ 126, 54, ], &[ 76, 117, ]) },
    Rule { id: 105, description: Or(&[ 54, 20, ], &[ 117, 98, ]) },
    Rule { id: 120, description: Or(&[ 130, 117, ], &[ 64, 54, ]) },
    Rule { id: 83, description: Or(&[ 54, 92, ], &[ 117, 112, ]) },
    Rule { id: 66, description: Or(&[ 56, 54, ], &[ 54, 117, ]) },
    Rule { id: 79, description: Or(&[ 91, 117, ], &[ 64, 54, ]) },
    Rule { id: 128, description: Or(&[ 117, 48, ], &[ 54, 127, ]) },
    Rule { id: 11, description: Sequence(&[ 42, 31, ]) },
    Rule { id: 70, description: Or(&[ 117, 97, ], &[ 54, 118, ]) },
    Rule { id: 6, description: Or(&[ 62, 54, ], &[ 7, 117, ]) },
    Rule { id: 116, description: Or(&[ 117, 101, ], &[ 54, 133, ]) },
    Rule { id: 27, description: Or(&[ 12, 54, ], &[ 104, 117, ]) },
    Rule { id: 118, description: Sequence(&[ 117, 117, ]) },
    Rule { id: 46, description: Or(&[ 64, 54, ], &[ 66, 117, ]) },
    Rule { id: 52, description: Or(&[ 30, 54, ], &[ 124, 117, ]) },
    Rule { id: 80, description: Or(&[ 117, 129, ], &[ 54, 9, ]) },
    Rule { id: 13, description: Or(&[ 117, 104, ], &[ 54, 40, ]) },
    Rule { id: 89, description: Or(&[ 106, 117, ], &[ 34, 54, ]) },
    Rule { id: 127, description: Or(&[ 91, 54, ], &[ 64, 117, ]) },
    Rule { id: 88, description: Sequence(&[ 56, 66, ]) },
    Rule { id: 130, description: Or(&[ 117, 117, ], &[ 54, 117, ]) },
    Rule { id: 9, description: Or(&[ 69, 117, ], &[ 81, 54, ]) },
    Rule { id: 106, description: Or(&[ 97, 117, ], &[ 66, 54, ]) },
    Rule { id: 124, description: Or(&[ 117, 32, ], &[ 54, 83, ]) },
    Rule { id: 109, description: Or(&[ 54, 90, ], &[ 117, 125, ]) },
    Rule { id: 121, description: Or(&[ 117, 6, ], &[ 54, 10, ]) },
    Rule { id: 133, description: Sequence(&[ 66, 56, ]) },
    Rule { id: 113, description: Or(&[ 130, 117, ], &[ 118, 54, ]) },
    Rule { id: 30, description: Or(&[ 18, 54, ], &[ 102, 117, ]) },
    Rule { id: 48, description: Sequence(&[ 56, 17, ]) },
    Rule { id: 122, description: Or(&[ 94, 117, ], &[ 40, 54, ]) },
    Rule { id: 49, description: Or(&[ 17, 117, ], &[ 104, 54, ]) },
    Rule { id: 60, description: Or(&[ 54, 94, ], &[ 117, 66, ]) },
    Rule { id: 55, description: Or(&[ 54, 40, ], &[ 117, 118, ]) },
    Rule { id: 95, description: Sequence(&[ 97, 54, ]) },
    Rule { id: 29, description: Or(&[ 133, 117, ], &[ 48, 54, ]) },
    Rule { id: 101, description: Or(&[ 40, 117, ], &[ 12, 54, ]) },
    Rule { id: 98, description: Or(&[ 5, 117, ], &[ 91, 54, ]) },
    Rule { id: 21, description: Or(&[ 54, 118, ], &[ 117, 40, ]) },
    Rule { id: 111, description: Or(&[ 118, 54, ], &[ 12, 117, ]) },
    Rule { id: 102, description: Or(&[ 54, 111, ], &[ 117, 43, ]) },
    Rule { id: 135, description: Or(&[ 105, 117, ], &[ 35, 54, ]) },
    Rule { id: 58, description: Or(&[ 54, 93, ], &[ 117, 84, ]) },
    Rule { id: 65, description: Or(&[ 24, 54, ], &[ 57, 117, ]) },
    Rule { id: 19, description: Or(&[ 54, 17, ], &[ 117, 94, ]) },
    Rule { id: 126, description: Or(&[ 131, 117, ], &[ 63, 54, ]) },
    Rule { id: 59, description: Or(&[ 117, 13, ], &[ 54, 77, ]) },
    Rule { id: 82, description: Or(&[ 54, 2, ], &[ 117, 128, ]) },
    Rule { id: 125, description: Or(&[ 117, 91, ], &[ 54, 12, ]) },
    Rule { id: 74, description: Or(&[ 97, 54, ], &[ 86, 117, ]) },
    Rule { id: 18, description: Or(&[ 54, 39, ], &[ 117, 46, ]) },
    Rule { id: 24, description: Or(&[ 54, 113, ], &[ 117, 21, ]) },
    Rule { id: 104, description: Or(&[ 56, 117, ], &[ 117, 54, ]) },
    Rule { id: 117, description: Literal('b') } ,
    Rule { id: 108, description: Or(&[ 117, 88, ], &[ 54, 122, ]) },
    Rule { id: 47, description: Or(&[ 67, 117, ], &[ 59, 54, ]) },
    Rule { id: 69, description: Or(&[ 117, 78, ], &[ 54, 33, ]) },
    Rule { id: 67, description: Or(&[ 54, 19, ], &[ 117, 132, ]) },
    Rule { id: 61, description: Or(&[ 117, 74, ], &[ 54, 23, ]) },
    Rule { id: 14, description: Or(&[ 54, 29, ], &[ 117, 68, ]) },
    Rule { id: 54, description: Literal('a') } ,
    Rule { id: 43, description: Or(&[ 104, 54, ], &[ 53, 117, ]) },
    Rule { id: 56, description: Or(&[ 54, ], &[ 117, ]) },
    Rule { id: 103, description: Or(&[ 54, 130, ], &[ 117, 118, ]) },
    Rule { id: 93, description: Or(&[ 117, 72, ], &[ 54, 45, ]) },
    Rule { id: 73, description: Or(&[ 117, 14, ], &[ 54, 135, ]) },
    Rule { id: 72, description: Or(&[ 117, 118, ], &[ 54, 118, ]) },
    Rule { id: 53, description: Or(&[ 117, 117, ], &[ 54, 54, ]) },
    Rule { id: 50, description: Or(&[ 117, 97, ], &[ 54, 94, ]) },
];

pub const REAL_MESSAGES: [&str; 329] = [
    "bbabbaabbbaabaaaabbbbaabaabbaabbabbbbabb",
    "bbbaaababbabbbaababbaaaaaaabaaabbbabbbab",
    "bbaaabbbababbbaaabaabaabaaaaabaa",
    "baabbbbaababbbbbaaaaaaabaaaabbbbaabaabaa",
    "bbbabbabbbaababbabbbbbbbababbabaaaababbbbaababaaaaaaabab",
    "bbbababbaababaaaabaaabbaabbbababbbbbaababaababbbaabbaaaababbbbab",
    "bbaabaaaabbaaabbbababbabbbbaaaabbaababbababaaabbbabbbbaa",
    "aabbbaabaabbabbbbbaaabaa",
    "babbabbaabbbaabbbabbbbab",
    "baababababbaababbbaaaaaabaabbaaabbbbbbbbabbbbabbaababbabaaabaaababbaabaa",
    "aabbaaabaabbabaabbbabbaa",
    "babaabbbaabaabaabababaababbabbba",
    "aabbabbbbbbbaaaaaabaaabb",
    "aaaabbbabbbbaabaabbbabaa",
    "aabbaaabaababaaaabbbbaaa",
    "babaaaaaabbabbbaaaabbbaa",
    "bbaabbbbbbbaaabbbbabbbaa",
    "abbbaaababaaababaaabaabaaabaababababababaaaababaabaaaabbaabbbabb",
    "baaaababaabbabaabbbbaabbaabbaaabbbbabaaaaabababbbbaaabaa",
    "bbbababaaabbabaaaaaabaabababaaaaabbaabbbababbbabbababaab",
    "bbbbbbaabaaaabbbaababaabbbaaabba",
    "baabaabaaaabbaaaabbbbbaabbaabaaaabaaabaaaaaaabbb",
    "aaababbbbbbbbbaabaababaa",
    "ababaaababbbababaaaabbbbababbbaaaaabaabb",
    "aabababaaaabbbbaaaaaabab",
    "abbabbbbaaaabbbaaaabbabbbbbbaaaaaabbaaaa",
    "ababbbbbabbabaabbbbbabababaabaaaaabbbbba",
    "abbaababaaaababbaaabaaba",
    "aaaabbaaaabaababbaababaa",
    "abaaabbaaaabbabbaababababbabbbbb",
    "abbaaabaabbabababbbbbbbbababbabababaaaaa",
    "aabaabababbbabbbbbababbbaaaaaabbabaaaaba",
    "aabbbabbbbbbbbaabbabbaaabbababba",
    "bbaabbbabbaaaaaabbaaaaaabaabaabbabaabbaa",
    "aababbaabbaaaabbbbaabbaaaaabbbababaaaabb",
    "babaabbaababbbaaaabbbbba",
    "baabaababbaabbbbabbaabbbaabbaababbbaabbbabbabbba",
    "babbababbbbabaabbbbbabaabababbbabaaabbab",
    "bbbbbbaaabbabbbbbbbaabaabaaababb",
    "aaaabaabbbbaaabbbbbaaaaaaababbbaabaaabababaaabaabbababab",
    "baaaabbaababbbbaaaaaabbabbbaaabaabbbabbbbbaaaaaa",
    "aabbbaababbaaababbaabaabaababaabaaabaabb",
    "aaababbaabababbaaaaababbabbbbaab",
    "aaaabbbbaaaaaabaaabababa",
    "abbaaabbbaabbbaaaaabaaba",
    "aabbabbbabbababaaabaabababbbbbbaabbbbabb",
    "ababaaabbbbabbbbabbababaabbaababbabababbbababaab",
    "bbbaabaabbbabaabbbbbaabaaaabaabbabaabbaa",
    "abbaaabbbababbbabababbaa",
    "bababbbabaaababaaabaaaaaabbbaabaaabbbaabbaababbabbababbabbbaababbabbbbba",
    "abaaabbbbaaaaabbabbababaababbbbbaaabaabb",
    "bbaaaabbbabbaabbaaabaaab",
    "abbaababbaaabbaabbaabbbbbbbbabba",
    "baaaaaabbabaabbaaaaaabab",
    "babbaababbbaaabaaabbabbbbbbababaaaabaabbbbbaabba",
    "bbababaaaaaaaaabbbaaabbbabaaabbbabbaaabbaaabbababbbbaabbbbbbabba",
    "abaabaaabaababaaabbbaabaaaaaabaabbababbbbbbaaaabbbabaaabbbabaabaaabaabaaaaabbbaa",
    "bbaabaabaaaabbaabbbbaabaabbaaabaaabaaaba",
    "aaababbbabbabbabababaaaaabaaabbbbabababbbaababbaabbaabbaaabababaabaabaababaabaab",
    "baabbbaabbbbaababbbbabababaabaabbaaaaaaaaabaabbbbbbbaaabbabbbbbaaabaabaaabaabbab",
    "abababbaabaabaaabbbababaababbababbbabaabbbaababa",
    "abbbaababbbabaaaabababaababbaabaaababbbababaabbb",
    "bbbabbbbbbbaaaababaabaab",
    "abbaabbbbabaaababbbbabbb",
    "babbabbbabaaaaaabbaababa",
    "aaaabbbaabbbbbbbabbbaababaaabaaabbbbabba",
    "abbabababaaaabbabbaaabba",
    "babababaababbbbbbbbaaaaaaaaaabab",
    "baaaaabaaaabaaaababaaaaa",
    "bbaababbbbbabbabababbabaabbbababaaaabbab",
    "bbbaaaaabbaabbbbaaaabaabbbabaabbbabaaaab",
    "abababbabaabbbbabbabaabbabaaaabb",
    "abaabaaaaaaabbbaaaabbabbbbbababbabbabbaa",
    "bbaabbbbabbbbaabbbbbbaba",
    "baabbabaaaaabaababaabaaabaaabbab",
    "bbbbbbbbbbbaaabaaaabbbbbbababbabbbbaaabbbabbabbaaaaaaaaababaaaabaaabbbaabababbbabbbbbaab",
    "baabbbbaaababbbabbbabbabaababbbbbaaabbabaabbbaaaaabbbbba",
    "babbaababaabbaaabaaabbbb",
    "bbbaaaaaaaababbaaaaabbaaaaabababaababaabbaabbbababbbabaabbabbbaa",
    "baaabbbaaaabbbbaabaaaaab",
    "abbaaababbbbbabababaabaaabbbbaaabababaaabbbbaaba",
    "bbbbaaaaaabbaababbbaabab",
    "aaabaaaaabbbabbbaababaaaaaaabaababaababbabbbbaab",
    "bbbbbbaabaaabbbaaabbbabbbaabbbaaaabbabbaabaabbbb",
    "babbabbbaaabbabbbaaababb",
    "baabbbaababaaababaababbb",
    "abbababbabbabaabbbaaaaba",
    "abaaabbbbbaaabbbaabaabba",
    "bbaababababaabbbabababbbbbbaabaababbabab",
    "bbbaabbbaabbbbaaabaabbba",
    "abbabbabbbaabbbbbbaabbbbbbabbaba",
    "bbbaaaaaabbabbbbabaabbbb",
    "bababababbbababababaaabb",
    "abaabaabbbababbbbbabbaba",
    "aabbaaabaabbaabaaaaaaabb",
    "bbbaaababbbaaaaaaaabbbbb",
    "aababaabaaaabbbaabaabaabababbbbabbbbbabaaabbbaaa",
    "bbababaaababbbaaaaaaabbb",
    "aababbbabbbabaabaaabaaba",
    "abaaaaaabbaababbaaabbbbaaaabbabbbababbaaaaaaabbb",
    "aaabbabbabaaabbaaaaabaabbbabaaab",
    "bbabbbbbbaaabbbbabaaaaabbbabbbaaaabbaaaabaabbabababbaabbabaababa",
    "aababaabaabbabaaaabbbabaaabbababbababbabaabaabbbababaaaa",
    "bababaaabbabbbaabbbabbbaaabbbaaa",
    "bbbabbabbabbabaaabbbbbbaabaabbbaababbabb",
    "bbabaaaaabbabbbabbbbaabbaabaabbabaaaabaa",
    "bbaaaaaaabbaaabbbaaaabbabbbbaaab",
    "abbabaabaaabababbbbbabaa",
    "bbabbaabbababbabaabababb",
    "baabaaababbbababbaabaabaababbaaa",
    "abbabababbabbaabbbbbabba",
    "aaabbabaaaaabaabbbbababaabababaa",
    "bbbbabaaaaaabbaaaabbbaaa",
    "bababbbaaaaabbbbaaabaaaabaabaabaaabbbaabbbbbabbbabbbbaaa",
    "bbaabbabababbbababbbaabbabaaaaab",
    "aaaababbbabbaababbbabbababbbbbbbbbbbabaabbaabbabbabbaaabbaaaabaa",
    "ababbbabbaaabaababbaaaaaababaaaaaabbabbaaaabbbbaabbabababbbababa",
    "aababaaaaaabbaaabbabbbaabbbbaabbaababaab",
    "bbbababaaababbbabaaaaabbbbaaabbbbbaabaaabbbabaabaaaaaabb",
    "bbabbaaabbbbaabaabbbaabb",
    "aaababbbbbbaabbbbabbbaba",
    "aaabbbabbbbbaaabababbaaa",
    "ababbbaaabbbbbbbabaabaaaaaabbbab",
    "babbaabbbbaaaaaabbabbababbabbbaabbaababa",
    "ababbbbbaabbaaaaabaabbaabbbaaabbabbabaab",
    "bbaabaabbbbaaabbabbabbaa",
    "aababbaaaaababbbbabbbbaa",
    "abbaaabbbbbabaaaaababbab",
    "abbabaaaaaaabbaabbababaabbbbbbba",
    "abaaabbaabbabaaaabaabaababbbbbbaaabababbabbbbaaaabbbbabb",
    "bbababaaababaabaaaabbbab",
    "aaaabbaaaabbabbababaabbb",
    "babaabababaaaabbbbabbaba",
    "baaaababaaabbaaaabbbabaabbaabbbbabbaaaaaabaabaaaabbbbababbbbbaabbbabbaabaabbbbbb",
    "baabbababbaaabbbbbbbabaaaababbaaaaaababbbabbabababbbbbab",
    "aabbbabbaaaabbbbbaaaabaa",
    "bbabbaababbabaabaaaaabbababaabaaabbbabaa",
    "babbabbbaaaababbbbaaabab",
    "ababbbbaababbbbaababbbaabbabaabababbabba",
    "baaaabbbbaaaaabbabaabbba",
    "baaaaababbbabaabbbaaaaaabaabaaaabaabbbaaaabbbbba",
    "ababaaaaabbbbbbbbabbbabb",
    "abbaaabbbaaaaaaabbaababaabbbabba",
    "abaabaaaabaabaabbbaaabaa",
    "bbbabbabbaaaabbabaaaabbbababbaab",
    "abbbbabbbbaababaaabaabababbbaababbaabbbabbabaababbabaabb",
    "bbababaabbbabaaaaaabbaababaabbab",
    "aabbabbbbbabbaababaababb",
    "aaaaabbabbbbaaaabbaaaabbbbabbabb",
    "aaaaabbabaabaaaaabababaabbbbbabb",
    "babaaababbaaaabbaaababbaabababaaabbbbbaaaaaaaaaa",
    "babbaabbabbaaababbaaabba",
    "bbbbaabaababababaabbbbab",
    "baaabbaaaaababbbbaaababa",
    "abbbabababbaababababaaaabbbabbabbbaabaabaabaabaababbbbbb",
    "babababaaaabababaaababaaaaaabbabbbababab",
    "bbbbababbababababbaaabaa",
    "aabaabababbabaaabaabbbab",
    "bbbabbababaabaababababbaabaabaabbbbbbaab",
    "bbbabababaaaaabaabbababbabbaaabaaaabbbababbbbaababbbbaab",
    "aababaaaababbbaaaaaababbbbaabaaabaabbbaaabaaaabbabbaabbabbabbbbbabbbabaa",
    "abbbbababbabbaaababbabbbaaabbbbababaababbaaabaab",
    "bbaabaabaabbbaabaaaaabbaabaaaaaaabbbbaababbbbaaa",
    "bbaaabbbbbbabbabbabbbbba",
    "aabbbaabbbbabbabbbbbbabb",
    "baaaaaaaabbbababbabaaabb",
    "abaabaabaabbbabbbbbababbbbaabaababaabaababaaaabababaaaaa",
    "abbaababbbbbbbbbbbbbaaab",
    "baaaaababbababaaabaaaaba",
    "abaaabbbbababbbabbbabaabbabaabbbaabbbababbbbbbababbaaabb",
    "babbababaabbabaaaabaabbbbaabaaaaaaabaaba",
    "abbababaaaaabbbaabaabaaabbabbbaa",
    "bbbbabaabaaaaaabaabaababaabbbababbbbaaabbbaaaaba",
    "aababababababbbbbbbababbbbbabbabbababbbb",
    "ababbabbaabbbaaabbbbabbb",
    "aaabbbbabbaaabbbbbbbaabb",
    "baabaababbbbbbabaaaaaaaa",
    "bbaaabaaabbaabababbbaaaabaabaaaa",
    "baaaaaabbbbaaaaabbbaabaaabbbbaabbabbaaaa",
    "baabbbaabbbababababbaaab",
    "baaaabbbaaababbaaaababbabbbabaabaaaabbab",
    "bbbbabababaaabbbbabaabab",
    "aaabababbbabaabbababaaaabbbbabaaabaaabba",
    "bbbaaabaaabbaaabbaaabbaabbababba",
    "bbabbaaabaaaaabaababbbbababbaabbbbbbaaaaaababbabbabbbaba",
    "aaaaaabaaabbabababababaaaaabaaba",
    "abababbabbababbbbbababbbbababaaa",
    "babaabbabbababaaabbbbabb",
    "aabbabaaabababaaabbbbbaaaaabaaba",
    "bbaaaaaaaaaabbbbbbabaaaa",
    "aaaaaaabbaabbaaabbababba",
    "aaababbbbabbaabbbbbaaabaaababbaaabbababbabaaaaab",
    "aaababababaaabbbbbbaabba",
    "abbbababaababbbbaabbaabb",
    "abaababbabaaabbbbbbaaababaaabbabbabbbbaa",
    "aabbaababbababaabbabbaaaabbabaaabbbabbbbbabbbaaaabbbbbbaabaabbaabbbbbaaa",
    "aabbbabbabaabaabbbaaabbbabbbabbbbaaaabaababababbaababbabbaabbabb",
    "aabbbaabaaabbaabaaaaabbb",
    "abaaabbbbabaaababbaababa",
    "baabaaabbbababaabaaababb",
    "abbbaababbaaaabbbbaaaaab",
    "aababbbaabbaaabbaaabbbbababbaabaabbbbbab",
    "abbababaaaabaaaaababbabb",
    "abbaabababbaaabbababbbab",
    "bbbaabbbbbababaabababbababaababbbababaaaabbbbaaabbbbaabbbbbabbbabbabbbba",
    "aabaaaabbaaaabbaaababbbbbaaabaaaabaaaaba",
    "baaaababaaaabbbaaaabbbbabbbbabbaabbbbaabbabbabbabaabbbab",
    "aaabbaabbbbbabaaaaaaaabb",
    "bbabbaabbbbabaaaabbbabba",
    "bbbbaabaabbabbabbabbaabbabaaaabb",
    "aaaababbaaabaaaababaaababbbabaabbbbaabaa",
    "abbbababababababbaaabbab",
    "aaabbbaabbaababbababbabaaaabbabbaabbaaabaaabbbbbaaaaaaabaaaaabba",
    "aabbabbaaaababababababbababaaaaa",
    "aabbabbbabbbaaaaabbbbbaaabbbaaaaaabbbaabbbabaababbabbbbaababbaaaaaaabaaa",
    "abbbabbbaaabbababbabbaabbaaababb",
    "bababbbbbababbabbaabaababbbbabab",
    "babbabbbaababbbbaaabaaba",
    "bbbabaabaababaababbaabaa",
    "aababaababbabababaaabaaa",
    "bbbabbbbbabbaabbaabbbbaabbababaaabaaababaabababb",
    "babaaabaaaababbaabaaaaaabaaaaabaabbbbaab",
    "bbaabaababbbbbbbbbaabaaaaaabaabb",
    "baabbaaaaaabbaabbbbbaababbaaabbbbaaaaaaabbbaabaabaaabbbb",
    "aabbabaabaaaabbaabbabababaabaabb",
    "bbbaabaabbbaaaaaaaabbaabaaaaaabb",
    "baabbbaaabbaaabbaaaabbbbbbaaaabaabbaaaaaabaabbbaabbbabaababaabab",
    "abbbbbaaabbabaaaaaabbaaaaabbbbaababaabababbbaaabaaaaabbb",
    "aababbbaaaaababbabaababb",
    "aabbbbaaabbabaaaabaaaaaabaabaaabbabbbbaa",
    "aaaabbaabbaabbbbaabaaaaaaababbababbbbbbaaaabbbabaaaabbba",
    "aaababbbabbaabababaaabbababbababbbabbbbabbbbbaab",
    "abbaababbaaaabbbbaaabaab",
    "aaaababbaababaabbbababbbaababbbaaababbaa",
    "babbbabbaabbaabbbabbabaaababaaabbabbbbab",
    "aabaaaabaaabbabaabbabbaa",
    "bbbababbbbababaababaaaaa",
    "aaaabbabaaaaaabbaaaabaaa",
    "bababbbaabbbaabaabbabbbbbbbabaaaaabaaaabbaababbb",
    "bbaaaaaaaaababbaaabaaaaa",
    "abbbababbabaaabababaabaabaaaabaabbabbbab",
    "bababbbbabbabaaabbbabaabbaabaababaababbaabbaabbabbabababaaababaababbbaba",
    "abaaabbbbbbbbbaabbaabbaabbaabbababbaabba",
    "aaaaabbabaaaaabbababbaaaaabbabaaabbaabbbbbaabaabaaabbbaabbbbbaba",
    "baaaabababbaabaaabaaaaaaaabaabbbbaababaa",
    "bbaaabbbbabbaabbaabaabba",
    "aaaabbaaababbbbbaaaaabbb",
    "abbababaaabbaabbaaaaabaabaaababbabbbaaababaaaababbbaabbaaaaababb",
    "aabbaababbababbbbbbabaaabbbaaabaabababbababbbaaababaabaabbabbbbabbaaaaba",
    "aaaaabbaaaabbbbabbbbabaabbbbbbaaaaaabbbabbbaaabbbbabaaaaaaabbbbbbababaababbbabaa",
    "babababbbabbabbaaabbbbbaaaaaabaa",
    "abbbbbabbbbbaaabbbabbababaabbbababaaaaba",
    "aaabbaaabaaaaabbbabaabab",
    "aaabbbbabababbbabaaaaabbabaababb",
    "ababbbbbbbbabbabbabababb",
    "ababaaababbbababbaabbbbb",
    "babbaabaaabbabbaaaaabbbbbbaabaabbbbabaaabbabbbab",
    "abbbaabaaababbbaaababaabaaababbbbbabbbba",
    "aababaaaababbbbbbbbabaabbbbabbaa",
    "aaabbabababbbbaabbabbaba",
    "baabaabababbabaaaababbbbabaabbbb",
    "ababaabaababbabaaabababaaaaaaaaaabbbbbab",
    "bbbbabaabbbaabaabbbaabbbabbabaabbbbaabbaaaaaabbbabaaaaab",
    "aabbabbabbbbbaaabbabbbabbbaabababbbaabbaaabbaabababababaabbaaaba",
    "bbabbabaabaabaaabbaabbababaaaababaababbbbaaababbabaababb",
    "babbabababbaaaabaaaaaaabaabaaabbaaaabbaabbbaaaabbaaaaabbaaaaaababababbba",
    "abababababbabbabaaaabbba",
    "aabbbabbbaaabbaabaaabbbbbaaaabaaabbbbbba",
    "aabbabaaaaabaaaabbbbaaaabbbabbabaabababaabbaaaaa",
    "bbaabbbbaaabbabbbbbabbaa",
    "aaababbbbaaabbaaabbabbabbabaaabb",
    "aabaabbbaaaabaabbbaaaaab",
    "abaaaaaaaababbbaaaabbbbaaaababaa",
    "bbaabaababababababbbbaaa",
    "abbaaabbabbabbbbbaababbb",
    "aaabbaabbabbaababaaabbaabbaabaaaabbbbbbabbabbbabaabbbbab",
    "bbabbaababaaabbbaabaaaab",
    "ababababaabaaaabbaaaaaaabbaabbbbbababbabaabaaaba",
    "aaabbabbaababbaabbbabbba",
    "bbbaaaaaababbbbabbbbbbaababbaaab",
    "abababaaabbabbabbabbbaba",
    "bbbaabaaabababaaaaabaaab",
    "abbbabbbababbbbaaaabaaaababaaaab",
    "bababbbabababababbbbbabb",
    "bbaaabbbbbbbbbabbbbaaabababbbbba",
    "bbabbaabbabaaabaaaabbbbb",
    "ababbbaabbaabaabaabaaaabaaabababaabaaabbaabbbbba",
    "aaaaaaabbaaabbbabbbbaaaababaabaabbbaabab",
    "aaabbabaabbbabbbababaabb",
    "baabbbbabbbaaabaabbabaabbbaabbbaaabbaaabbbbbababaabaabaabbbbbabaaabaaabb",
    "bbbabaaabbabbaabbabbbbab",
    "aabbababbaaaaabaababbbbabbbabaaababaaaabbbbabbbaaaaaaaaa",
    "baabababaabbaaabaabbabbbbaaaababbbabaaabbbbbaabb",
    "bbbaaaaabaabababaaaaaababbbaaaaaaababbbbbaababbb",
    "baaaaabaabbabababbaababbaabaabba",
    "abababbaaaaababbabaabbba",
    "baaaaabbbaabbabaaaaaaaaabbabbbab",
    "abbabababaaaabbbabbbbbaaaaaaaaabbbabaaba",
    "aabaaaabbbabbbbbbabaaabbbabbaaaaabbbbbaa",
    "abaaaaaabbbbbbabababbabaaabaaaababaaabab",
    "abbabbbaabaababbabababbb",
    "abbbbbbbbbaabaabbaaaabaa",
    "ababaabaaababaaabaaaaabbaaaaabaa",
    "aaabaaaaaaabbabbbbaaabba",
    "bbbabaaabaabaababbbbaaaaaababbbaababaaaababbbbaa",
    "abbabbbabbabaabbaaabbbbbabbababa",
    "aabbababababbbaaaabbbabbbbaaabaa",
    "abaabaaaababaaaaaaabaaaabaaabbabaabaaaba",
    "baabaabaabbaaabbbbbabababbaaabaa",
    "abbabaabbbbbabaaaabbbbbb",
    "aaaabbaaabbbbbaababbbaba",
    "aaaabbbabbbbaababbaabbbbabaaaabbbaababba",
    "abbabaabaaabbbbaaaabbbbb",
    "aabaaabbabbbbabbabbbaabb",
    "aabbbaababbabbababaabbbb",
    "aaaabbaaababbaabaaaaabbb",
    "abbabbbbaaaaaaabbbbbbbabbaabbbbb",
    "ababaaaabbaabaabaababaaaaabbbaab",
    "baaabbaaabbabbbbbabbababaaabbbbb",
    "bbaababbbabaabbaababbbab",
    "abababbaabbbabababbbaabababaabaa",
    "bbabbaabbbbabbbbbbbbababbaaabbbb",
    "aaabaaaaababbabaaabbbabbbbabbaaaabaababb",
    "baabaaaaaaabbaababbbabbbaabbaaab",
    "aabababaabbbabbbbbbabaabbbbbbbaaababaaabaaaabaaabbabaaba",
    "abbaaabaabbaabbbbbaaabab",
    "baaaababbaaaababbbababba",
    "aabaaaababbbbbbbbabbbabb",
    "bbbbbbaabbbbbbbbbaabaabaababababbaabababaabaaabbababbaab",
];
